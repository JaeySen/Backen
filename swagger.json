{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Autodesk-based BIM API",
      "description": "Autodesk-based BIM API",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "localhost:3000",
    "basePath": "/api/v1",
    "tags": [
      {
        "name": "Users",
        "description": "User APIs"
      }, 
      {
        "name": "Group",
        "description": "Group APIs"
      }, 
      {
        "name": "Project",
        "description": "Project APIs"
      }
    ],
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/user": {
        "post": {
          "tags": [
            "Users"
          ],
          "description": "Create new user in system",
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New user is created",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get all users in system",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Users"
              }
            }
          }
        }
      },
      "/user/{userId}": {
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of user that we want to find",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get user with given ID",
          "responses": {
            "200": {
              "description": "User is found",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "delete": {
          "summary": "Delete user with given ID",
          "tags": [
            "Users"
          ],
          "responses": {
            "200": {
              "description": "User is deleted",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "put": {
          "summary": "Update user with give ID",
          "tags": [
            "Users"
          ],
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User with new values of properties",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User is updated",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "/group": {
        "post": {
          "tags": [
            "Group"
          ],
          "description": "Create new group",
          "parameters": [
            {
              "name": "group",
              "in": "body",
              "description": "Group Schema properties",
              "schema": {
                "$ref": "#/definitions/Group"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "New group is created",
              "schema": {
                "$ref": "#/definitions/Group"
              }
            }
          }
        },
        "get": {
          "tags": [
            "Group"
          ],
          "summary": "Get all groups",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Group"
              }
            }
          }
        }
      }, 
      "/group/{groupId}": {
        "delete": {
          "summary": "Delete group with given ID",
          "tags": [
            "Group"
          ],
          "responses": {
            "200": {
              "description": "Group is deleted",
              "schema": {
                "$ref": "#/definitions/DeleteResponseSuccess"
              }
            },
            "404": {
              "description": "Group is NOT deleted",
              "schema": {
                "$ref": "#/definitions/DeleteResponseFailed"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "required": [
          "_id"
        ],
        "properties": {
          "_id": {
            "type": "ObjectId",
            "uniqueItems": true
          },
          "email": {
            "type": "string",
            "uniqueItems": true
          },
          "username": {
            "type": "string",
            "uniqueItems": true
          },
          "last_name": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "created": {
            "type": "UNIX timestamp"
          }
        }
      },
      "Project": {
        "required":["_id"],
        "properties": {
          "_id": {
            "type": "ObjectId",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          }
        }
      }, 
      "Group": {
        "required": ["_id"],
        "properties": {
          "_id": {
            "type": "ObjectId",
            "uniqueItems": true
          }, 
          "name": {
            "type": "string"
          },
          "created": {
            "type": "UNIX timestamp"
          }, 
          "authorization": {
            "type": "Array"
          }
        }
      },
      "DeleteResponseSuccess": {
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "data": {
            "type": "object",
            "properties": {
              "acknowledged": {
                "type": "boolean",
                "default": true
              },
              "deleteCount": {
                "type": "integer",
                "default": 1
              }
            }
          }
        }
      },
      "DeleteResponseFailed": {
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "data": {
            "type": "object",
            "properties": {
              "stringValue": {
                "type": "string",
                "default": "\"${groupId}\""
              },
              "valueType": {
                "type": "string",
                "default": "string"
              },
              "kind": {
                "type": "string",
                "default": "ObjectId"
              },
              "value": {
                "type": "string",
                "default": "${groupId}"
              },
              "path": {
                "type": "string",
                "default": "field"
              },
              "reason": {
                "type": "object",
                "default": "{}"
              },
              "name": {
                "type": "string",
                "default": "CastError"
              },
              "message": {
                "type": "string",
                "default": "Cast to ObjectId failed for value \"${groupId}\" (type string) at path \"_id\" for model \"groups\""
              }
            }
          }
        }
      }
    }
  }
  